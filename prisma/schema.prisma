generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  isOnline    Boolean       @default(false)
  profilePlan  ProfilePlan?
  userWorkouts UserWorkout[]
  visits       Visits[]
}

model ProfilePlan {
  id            Int     @id @default(autoincrement())
  firstName     String
  lastName      String
  userId        Int?    @unique
  cellPhone     String?
  city          String?
  currentStatus String?
  homeClub      String?
  state         String?
  zipCode       String?
  memberSince   String?
  user          User?   @relation(fields: [userId], references: [id])
}

model Visits {
  id            Int           @id @default(autoincrement())
  userId        Int
  checkin       DateTime
  checkout      DateTime?
  user          User          @relation(fields: [userId], references: [id])
  userWorkouts  UserWorkout[] @relation("WorkoutToUserWorkout")
}

model UserWorkout {
  id                Int                 @id @default(autoincrement())
  userId            Int
  editedAt          DateTime            @default(now())
  workout           String
  user              User                @relation(fields: [userId], references: [id])
  favoritedExercise FavoritedExercise[] @relation("UserWorkoutFavoritedExercises")
  visits            Visits[]            @relation("WorkoutToUserWorkout")
}

model FavoritedExercise {
  id               Int           @id @default(autoincrement())
  name             String        @unique
  equipment        String
  gifUrl           String
  target           String
  bodyPart         String
  instructions     String[]
  secondaryMuscles String[]
  userWorkouts     UserWorkout[] @relation("UserWorkoutFavoritedExercises")
}
