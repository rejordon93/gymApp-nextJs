"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/client/login/page",{

/***/ "(app-pages-browser)/./src/context/authReducer.tsx":
/*!*************************************!*\
  !*** ./src/context/authReducer.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_INITIAL_STATE: () => (/* binding */ AUTH_INITIAL_STATE),\n/* harmony export */   ActionType: () => (/* binding */ ActionType),\n/* harmony export */   \"default\": () => (/* binding */ reducer)\n/* harmony export */ });\n// Enum for action types. Defines all possible action types as string constants.\nvar ActionType = /*#__PURE__*/ function(ActionType) {\n    ActionType[\"SET_USER\"] = \"SET_USER\";\n    ActionType[\"SET_ERROR\"] = \"SET_ERROR\";\n    ActionType[\"SET_LOADING\"] = \"SET_LOADING\";\n    ActionType[\"SETLOADING\"] = \"SET_LOGOUT\";\n    return ActionType;\n}({});\n// Initial state for the reducer.\nconst AUTH_INITIAL_STATE = {\n    user: {\n        email: \"\",\n        username: \"\",\n        token: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        homeClub: \"\",\n        memberSince: \"\",\n        currentStatus: \"\",\n        cellPhone: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\"\n    },\n    apiRequestContext: {\n        error: null,\n        isLoading: false,\n        success: false\n    }\n};\n// Reducer function that updates the state based on the action type.\nfunction reducer(state, action) {\n    switch(action.type){\n        // Case to handle setting an error message.\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                apiRequestContext: {\n                    ...state.apiRequestContext,\n                    error: action.payload,\n                    success: false\n                }\n            };\n        // Case to handle setting user information.\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    ...action.payload\n                },\n                apiRequestContext: {\n                    ...state.apiRequestContext,\n                    success: true,\n                    error: null\n                }\n            };\n        // Case to handle loading state.\n        case \"SET_LOADING\":\n            return {\n                ...state,\n                apiRequestContext: {\n                    ...state.apiRequestContext,\n                    isLoading: action.payload\n                }\n            };\n        // Default case when no valid action is provided.\n        default:\n            return state;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0L2F1dGhSZWR1Y2VyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxnRkFBZ0Y7QUFDekUsd0NBQUtBOzs7OztXQUFBQTtNQUtYO0FBb0RELGlDQUFpQztBQUMxQixNQUFNQyxxQkFBZ0M7SUFDM0NDLE1BQU07UUFDSkMsT0FBTztRQUNQQyxVQUFVO1FBQ1ZDLE9BQU87UUFDUEMsV0FBVztRQUNYQyxVQUFVO1FBQ1ZDLFVBQVU7UUFDVkMsYUFBYTtRQUNiQyxlQUFlO1FBQ2ZDLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLFNBQVM7SUFDWDtJQUNBQyxtQkFBbUI7UUFDakJDLE9BQU87UUFDUEMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7QUFDRixFQUFFO0FBRUYsb0VBQW9FO0FBQ3JELFNBQVNDLFFBQVFOLEtBQWdCLEVBQUVPLE1BQWM7SUFDOUQsT0FBUUEsT0FBT0MsSUFBSTtRQUNqQiwyQ0FBMkM7UUFDM0M7WUFDRSxPQUFPO2dCQUNMLEdBQUdSLEtBQUs7Z0JBQ1JFLG1CQUFtQjtvQkFDakIsR0FBR0YsTUFBTUUsaUJBQWlCO29CQUMxQkMsT0FBT0ksT0FBT0UsT0FBTztvQkFDckJKLFNBQVM7Z0JBQ1g7WUFDRjtRQUVGLDJDQUEyQztRQUMzQztZQUNFLE9BQU87Z0JBQ0wsR0FBR0wsS0FBSztnQkFDUlgsTUFBTTtvQkFBRSxHQUFHVyxNQUFNWCxJQUFJO29CQUFFLEdBQUdrQixPQUFPRSxPQUFPO2dCQUFDO2dCQUN6Q1AsbUJBQW1CO29CQUNqQixHQUFHRixNQUFNRSxpQkFBaUI7b0JBQzFCRyxTQUFTO29CQUNURixPQUFPO2dCQUNUO1lBQ0Y7UUFFRixnQ0FBZ0M7UUFDaEM7WUFDRSxPQUFPO2dCQUNMLEdBQUdILEtBQUs7Z0JBQ1JFLG1CQUFtQjtvQkFDakIsR0FBR0YsTUFBTUUsaUJBQWlCO29CQUMxQkUsV0FBV0csT0FBT0UsT0FBTztnQkFDM0I7WUFDRjtRQUNGLGlEQUFpRDtRQUNqRDtZQUNFLE9BQU9UO0lBQ1g7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2V0aGFuOTMvRGVza3RvcC9neW1BcHAvc3JjL2NvbnRleHQvYXV0aFJlZHVjZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVudW0gZm9yIGFjdGlvbiB0eXBlcy4gRGVmaW5lcyBhbGwgcG9zc2libGUgYWN0aW9uIHR5cGVzIGFzIHN0cmluZyBjb25zdGFudHMuXG5leHBvcnQgZW51bSBBY3Rpb25UeXBlIHtcbiAgU0VUX1VTRVIgPSBcIlNFVF9VU0VSXCIsXG4gIFNFVF9FUlJPUiA9IFwiU0VUX0VSUk9SXCIsXG4gIFNFVF9MT0FESU5HID0gXCJTRVRfTE9BRElOR1wiLFxuICBTRVRMT0FESU5HID0gXCJTRVRfTE9HT1VUXCIsXG59XG5cbi8vIEFjdGlvbiBpbnRlcmZhY2UgZm9yIHNldHRpbmcgdGhlIHVzZXIuXG5pbnRlcmZhY2UgU2V0VXNlckFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGU6IEFjdGlvblR5cGUuU0VUX1VTRVI7XG4gIHJlYWRvbmx5IHBheWxvYWQ6IFVzZXI7IC8vIFBheWxvYWQgaXMgYSBVc2VyIG9iamVjdFxufVxuXG4vLyBBY3Rpb24gaW50ZXJmYWNlIGZvciBzZXR0aW5nIGFuIGVycm9yIG1lc3NhZ2UuXG5pbnRlcmZhY2UgU2V0RXJyb3JBY3Rpb24ge1xuICByZWFkb25seSB0eXBlOiBBY3Rpb25UeXBlLlNFVF9FUlJPUjtcbiAgcmVhZG9ubHkgcGF5bG9hZDogc3RyaW5nIHwgbnVsbDsgLy8gUGF5bG9hZCBpcyBhIHN0cmluZyAoZXJyb3IgbWVzc2FnZSlcbn1cblxuLy8gQWN0aW9uIGludGVyZmFjZSBmb3Igc2V0dGluZyB0aGUgbG9hZGluZyBzdGF0ZS5cbmludGVyZmFjZSBTZXRMb2FkaW5nQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZTogQWN0aW9uVHlwZS5TRVRMT0FESU5HOyAvLyBVc2UgYSByZWxldmFudCBhY3Rpb24gdHlwZVxuICByZWFkb25seSBwYXlsb2FkOiBib29sZWFuOyAvLyBQYXlsb2FkIGlzIGEgYm9vbGVhbiAodHJ1ZS9mYWxzZSBmb3IgbG9hZGluZyBzdGF0ZSlcbn1cbi8vIFVuaW9uIG9mIGFsbCBwb3NzaWJsZSBhY3Rpb24gdHlwZXMuIFRoaXMgYWxsb3dzIHRoZSByZWR1Y2VyIHRvIGhhbmRsZSBtdWx0aXBsZSBhY3Rpb24gdHlwZXMuXG5leHBvcnQgdHlwZSBBY3Rpb24gPSBTZXRFcnJvckFjdGlvbiB8IFNldFVzZXJBY3Rpb24gfCBTZXRMb2FkaW5nQWN0aW9uO1xuXG4vLyBVc2VyIGludGVyZmFjZSB0byBkZWZpbmUgdGhlIHNoYXBlIG9mIHRoZSB1c2VyIG9iamVjdC5cbmludGVyZmFjZSBVc2VyIHtcbiAgaWQ/OiBudW1iZXI7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIHRva2VuPzogc3RyaW5nO1xuICBmaXJzdE5hbWU/OiBzdHJpbmc7XG4gIGxhc3ROYW1lPzogc3RyaW5nO1xuICBob21lQ2x1Yj86IHN0cmluZztcbiAgbWVtYmVyU2luY2U/OiBzdHJpbmc7XG4gIGN1cnJlbnRTdGF0dXM/OiBzdHJpbmc7XG4gIGNlbGxQaG9uZT86IHN0cmluZztcbiAgY2l0eT86IHN0cmluZztcbiAgc3RhdGU/OiBzdHJpbmc7XG4gIHppcENvZGU/OiBzdHJpbmc7XG59XG5cbi8vIEludGVyZmFjZSBmb3IgdGhlIEFQSSByZXF1ZXN0IGNvbnRleHQsIHdoaWNoIGluY2x1ZGVzIHRoZSBlcnJvciBtZXNzYWdlLCBsb2FkaW5nIHN0YXR1cywgYW5kIHN1Y2Nlc3MgZmxhZy5cbmludGVyZmFjZSBBcGlSZXF1c3RDb250ZXh0IHtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7IC8vICBgc3RyaW5nYGNvbnRhaW5pbmcgYW4gZXJyb3IgbWVzc2FnZS5cbiAgaXNMb2FkaW5nOiBib29sZWFuOyAvLyBgdHJ1ZWAgaWYgbG9hZGluZywgYGZhbHNlYCBpZiBub3QuXG4gIHN1Y2Nlc3M6IGJvb2xlYW47IC8vIEluZGljYXRlcyB3aGV0aGVyIHRoZSByZXF1ZXN0IHdhcyBzdWNjZXNzZnVsLlxufVxuXG4vLyBUaGUgb3ZlcmFsbCBzdGF0ZSBvZiB0aGUgYXBwbGljYXRpb24sIHdoaWNoIGNvbWJpbmVzIGFsbCBjb250ZXh0cyBhbmQgdGhlIHVzZXIuXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJTdGF0ZSB7XG4gIGFwaVJlcXVlc3RDb250ZXh0OiBBcGlSZXF1c3RDb250ZXh0O1xuICB1c2VyOiBVc2VyO1xufVxuXG4vLyBJbml0aWFsIHN0YXRlIGZvciB0aGUgcmVkdWNlci5cbmV4cG9ydCBjb25zdCBBVVRIX0lOSVRJQUxfU1RBVEU6IFVzZXJTdGF0ZSA9IHtcbiAgdXNlcjoge1xuICAgIGVtYWlsOiBcIlwiLFxuICAgIHVzZXJuYW1lOiBcIlwiLFxuICAgIHRva2VuOiBcIlwiLFxuICAgIGZpcnN0TmFtZTogXCJcIixcbiAgICBsYXN0TmFtZTogXCJcIixcbiAgICBob21lQ2x1YjogXCJcIixcbiAgICBtZW1iZXJTaW5jZTogXCJcIixcbiAgICBjdXJyZW50U3RhdHVzOiBcIlwiLFxuICAgIGNlbGxQaG9uZTogXCJcIixcbiAgICBjaXR5OiBcIlwiLFxuICAgIHN0YXRlOiBcIlwiLFxuICAgIHppcENvZGU6IFwiXCIsXG4gIH0sXG4gIGFwaVJlcXVlc3RDb250ZXh0OiB7XG4gICAgZXJyb3I6IG51bGwsXG4gICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgfSxcbn07XG5cbi8vIFJlZHVjZXIgZnVuY3Rpb24gdGhhdCB1cGRhdGVzIHRoZSBzdGF0ZSBiYXNlZCBvbiB0aGUgYWN0aW9uIHR5cGUuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWR1Y2VyKHN0YXRlOiBVc2VyU3RhdGUsIGFjdGlvbjogQWN0aW9uKTogVXNlclN0YXRlIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIC8vIENhc2UgdG8gaGFuZGxlIHNldHRpbmcgYW4gZXJyb3IgbWVzc2FnZS5cbiAgICBjYXNlIEFjdGlvblR5cGUuU0VUX0VSUk9SOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGFwaVJlcXVlc3RDb250ZXh0OiB7XG4gICAgICAgICAgLi4uc3RhdGUuYXBpUmVxdWVzdENvbnRleHQsXG4gICAgICAgICAgZXJyb3I6IGFjdGlvbi5wYXlsb2FkLCAvLyBTZXQgZXJyb3IgbWVzc2FnZS5cbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSwgLy8gTWFyayByZXF1ZXN0IGFzIHVuc3VjY2Vzc2Z1bC5cbiAgICAgICAgfSxcbiAgICAgIH07XG5cbiAgICAvLyBDYXNlIHRvIGhhbmRsZSBzZXR0aW5nIHVzZXIgaW5mb3JtYXRpb24uXG4gICAgY2FzZSBBY3Rpb25UeXBlLlNFVF9VU0VSOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHVzZXI6IHsgLi4uc3RhdGUudXNlciwgLi4uYWN0aW9uLnBheWxvYWQgfSwgLy8gVXBkYXRlIHRoZSB1c2VyIG9iamVjdC5cbiAgICAgICAgYXBpUmVxdWVzdENvbnRleHQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5hcGlSZXF1ZXN0Q29udGV4dCxcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLCAvLyBNYXJrIHJlcXVlc3QgYXMgc3VjY2Vzc2Z1bC5cbiAgICAgICAgICBlcnJvcjogbnVsbCwgLy8gQ2xlYXIgYW55IGVycm9ycy5cbiAgICAgICAgfSxcbiAgICAgIH07XG5cbiAgICAvLyBDYXNlIHRvIGhhbmRsZSBsb2FkaW5nIHN0YXRlLlxuICAgIGNhc2UgQWN0aW9uVHlwZS5TRVRfTE9BRElORzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBhcGlSZXF1ZXN0Q29udGV4dDoge1xuICAgICAgICAgIC4uLnN0YXRlLmFwaVJlcXVlc3RDb250ZXh0LFxuICAgICAgICAgIGlzTG9hZGluZzogYWN0aW9uLnBheWxvYWQsIC8vIFVwZGF0ZSBsb2FkaW5nIHN0YXR1cy5cbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgLy8gRGVmYXVsdCBjYXNlIHdoZW4gbm8gdmFsaWQgYWN0aW9uIGlzIHByb3ZpZGVkLlxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJBY3Rpb25UeXBlIiwiQVVUSF9JTklUSUFMX1NUQVRFIiwidXNlciIsImVtYWlsIiwidXNlcm5hbWUiLCJ0b2tlbiIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiaG9tZUNsdWIiLCJtZW1iZXJTaW5jZSIsImN1cnJlbnRTdGF0dXMiLCJjZWxsUGhvbmUiLCJjaXR5Iiwic3RhdGUiLCJ6aXBDb2RlIiwiYXBpUmVxdWVzdENvbnRleHQiLCJlcnJvciIsImlzTG9hZGluZyIsInN1Y2Nlc3MiLCJyZWR1Y2VyIiwiYWN0aW9uIiwidHlwZSIsInBheWxvYWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/authReducer.tsx\n"));

/***/ })

});